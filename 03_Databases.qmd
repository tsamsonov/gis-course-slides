---
title: "Основы геоинформатики"
subtitle: "Лекция 3: Базы пространственных данных"
date: 03.03.2023
author: "Самсонов Тимофей Евгеньевич"
execute:
  echo: false
engine: knitr
format:
  revealjs: 
    theme: [default, custom.scss]
    slide-number: true
    footer: "Самсонов Т. Е. Основы геоинформатики: курс лекций для студентов географического факультета МГУ"
bibliography: references.yaml
---

## Пространственный объект

Пространственный объект [@gost:52438-2005]

:   Цифровая модель материального или абстрактного объекта реального или виртуального мира с указанием его идентификатора, координатных и атрибутивных данных.

![](images/feature.svg){fig-align="center" width="100%"}

::: callout-tip
## База пространственных данных

Задача базы пространственных данных --- организовать хранение пространственных объектов так чтобы их можно было использовать для решения задач.
:::

## База пространственных данных

База пространственных данных [@gost:52438-2005]

:   Совокупность пространственных данных, организованных по определенным правилам, устанавливающим общие принципы описания, хранения и манипулирования данными, предназначенная для удовлетворения информационных потребностей пользователя.

::: callout-warning
## Жаргон

Не рекомендуются к использованию словосочетания: база геоданных, пространственная база данных, база данных ГИС
:::

## Модели баз данных

::: columns
::: {.column width="50%"}
**Иерархическая модель** --- представление базы данных в виде древовидной структуры, состоящей из иерархически соподчиненных объектов.

::: callout-warning
## Ограничения

-   cложность добавления и удаления элементов;

-   необходимость любые концепции представлять в виде иерархии.

-   есть связи $1:1$ и $1:N$, но нет связей $M:N$.
:::
:::

::: {.column width="50%"}
![Полярные арктические метеостанции](images/hierarchical_db.svg){width="100%"}
:::
:::

## Модели баз данных

::: columns
::: {.column width="50%"}
**Сетевая модель** --- представление базы данных в виде графовой структуры, состоящей из связанных объектов.

::: callout-warning
## Ограничения

-   cложность добавления и удаления элементов;

-   необходимость любые концепции представлять в виде графа.
:::
:::

::: {.column width="50%"}
![Полярные арктические метеостанции](images/network_db.svg){alt="Полярные арктические метеостанции" width="100%"}
:::
:::

## Модели баз данных

::: columns
::: {.column width="50%"}
**Реляционная модель** --- представление базы данных в виде совокупности таблиц.

::: callout-tip
## Преимущества

-   нет необходимости явных связей;

-   возможность представлять практически любые сущности и их отношения.
:::

::: callout-warning
## Ограничения

-   более медленная трассировка связей;

-   избыточность хранения: у каждого объекта одинаковый набор атрибутов
:::
:::

::: {.column width="50%"}
![Полярные арктические метеостанции](images/relational_db.svg){alt="Полярные арктические метеостанции" width="100%"}
:::
:::

## Реляционные БД --- терминология

Таблица называется **отношением (relation)**.

Отсюда название модели --- *реляционная*.

::: columns
::: {.column width="60%"}
![](images/relational_term.svg){width="100%"}
:::

::: {.column width="40%"}
**Домен** --- допустимое множество значений атрибута.

-   в широком смысле --- *тип данных* атрибута: текст, целое число, действительное число, дата, геометрия и т.д;

-   в узком смысле --- конкретный *перечень* или *интервал* допустимых значений;
:::
:::

## Реляционная база данных

**Ключ отношения** --- это подмножество атрибутов, имеющее следующие свойства:

-   уникальность идентификации;

-   значение ключа уникально для каждого кортежа;

-   ни один из атрибутов ключа нельзя удалить, не нарушив его уникальности;

-   служит для обеспечения неизбыточности и целостности БД.

::: callout-note
## Таким образом

И первичный и внешний ключ может состоять из нескольких атрибутов. Например, каждая запись может определяться уникальным сочетанием даты и региона измерения.
:::

## Геореляционная БД

**Геореляционной** называется реляционная база данных с поддержкой геометрических доменов значений.

![Полярные арктические метеостанции](images/georelational.svg){fig-align="left" width="100%"}

## Уровни проектирования

::: columns
::: {.column width="10%"}
```{mermaid}
%%| fig-width: 1
%%| fig-height: 6
flowchart TB
  A((1)) ---> B((2))
  B ---> C((3))
```
:::

::: {.column width="90%"}

Концептуальный

:   объекты реальности, их отношения и характеристики; концептуальные модели географической информации; источники данных; пользовательские требования.

Логический

:   модели данных; cтруктура базы данных, ее разбиение на связанные элементы; атрибуты объектов и их типы данных.

Физический

:   фактическое представление данных в памяти компьютера; программное и аппаратное обеспечение
:::
:::

## Требования к базе данных

База пространственных данных должна быть:

-   **согласованной по времени** -- хранящиеся в ней количественные данные должны соответствовать определенному времени, быть актуальными;

-   **полной**, достаточно подробной для предполагаемых целей анализа и моделирования;

-   **позиционно точной**, абсолютно совместимой с другими данными, которые могут добавляться в нее;

-   **достоверной**, правильно отражающей характер явлений посредством атрибутов;

-   **легко обновляемой и доступной** для выбранной катгории пользователей;

-   **неизбыточной и внутренне непротиворечивой**.

## Система управления базами данных

Система управления базами данных (СУБД) [@gost:10032-2007]

:   Совокупность программных и лингвистических средств общего или специального назначения, обеспечивающих управление созданием и использованием баз данных.

**Основные функции** СУБД:

-   *управление хранением* данных во внешней (дисковой) и оперативной памяти;

-   *выполнение транзакций* --- последовательностей процедур;

-   *обеспечение надежности* --- способности восстанавливать состояние БД после аппаратного или программного сбоя

-   *поддержка специального языка* управления БД;

## Атрибутивные операции

::: columns
::: {.column width="50%"}
**Вычисление** выполняется для изменения значений одного атрибута. При этом могут использоваться значения других атрибутов или информация о геометрии объектов.

::: callout-tip
## Пример

Перевести проценты (0-100) в доли (0-1)
:::
:::

::: {.column width="50%"}
![](images/recalc.svg){width="100%"}
:::
:::

## Атрибутивные операции

::: columns
::: {.column width="50%"}
**Интерполяция** используется для вычисления промежуточных значений на основе существующих.

::: callout-tip
## Пример

Восстановление пропусков в данных, например в ряду речных расходов (гидрограф).
:::
:::

::: {.column width="50%"}
![](images/interp.svg){width="100%"}
:::
:::

::: callout-important
## Важно

Для выполнения интерполяции объекты (строки) необходимо упорядочить (по времени или другому атрибуту).
:::

## Атрибутивные операции

::: columns
::: {.column width="50%"}
**Классификация** (реклассификация) используется для разделения значений на группы, определяемые номинальной или порядковой шкалой измерений.

::: callout-tip
## Пример

Классификация населенных пунктов по людности на основании численности населения.
:::
:::

::: {.column width="50%"}
![](images/class.svg){width="100%"}
:::
:::

::: callout-note
## Заметим, что

Не обязательно классифицировать числовой атрибут, можно также перевести одну классификацию в другую. Например, уменьшить число классов, объединив их в более крупные.
:::

## Атрибутивные операции

::: columns
::: {.column width="50%"}
**Агрегирование** используется для вычисления сводных значений для групп объектов.

::: callout-tip
## Пример

Вычисление средней крутизны склона для водосборов, входящих в бассейны разных рек.
:::
:::

::: {.column width="50%"}
![](images/aggr.svg){width="100%"}
:::
:::

::: callout-important
## Важно

В процессе агрегирования происходит объединение геометрий объектов в *мультигеометрии*. При этом пересекающиеся в рамках одной мультигеометрии объекты могут быть объединены в один с удалением общих границ,
:::

## Фильтрация

**Фильтрация** используется чтобы оставить в данных только те объекты, атрибуты которых соответствуют заданным критериям.

![](images/filtering.svg){width="100%"}

::: callout-tip
## Пример

Оставить только лесные и степные фитоценозы с количеством осадков выше 500 мм в год
:::

## Проекция

::: columns
::: {.column width="50%"}
**Проекция** используется чтобы оставить только нужные атрибуты объектов.

::: callout-tip
## Пример

Из всех атрибутов оставить только мощность осадков и номер отдела четвертичного периода.
:::

::: callout-important
## Важно

Проекция приводит к изменению структуры таблицы
:::
:::

::: {.column width="50%"}
![](images/selection.svg){width="100%"}
:::
:::

## Соединение

::: columns
::: {.column width="50%"}
**Соединение** используется чтобы объединить атрибуты соответствующих объектов из двух таблиц в одну.

::: callout-tip
## Пример

К данным по регионам присоединить статистику по промышленному производству.
:::
:::

::: {.column width="50%"}
![](images/join.svg){width="100%"}
:::
:::

::: callout-important
## Важно

Для определения соответствия необходимо указать **ключевые поля** --- атрибуты, уникальным образом идентифицирующие объекты в обеих таблицах.
:::

## Библиография
